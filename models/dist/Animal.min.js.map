{"version":3,"sources":["Animal.js"],"names":["mongoose","require","connectWithRetry","connect","process","env","MONGO_DB_URL","useNewUrlParser","useUnifiedTopology","Number","MAX_VALUE","autoReconnect","reconnectTries","reconnectInterval","then","error","err","config","connection","console","disconnect","on","Schema","zoo","type","String","required","index","AnimalSchema","Date","age","scientificName","Boolean","model","module","exports","Animal"],"mappings":"aAOA,IAAAA,SAAAC,QAAA,YAYIC,SAAAA,mBAFJF,SAAAG,QAAAC,QAAAC,IAAAC,aAAA,CAOQC,iBAAiB,EAFzBC,oBAA4B,EACxBR,eAAiBI,EACbG,eAAiBE,OADsBC,UAEvCF,kBAAoB,MACpBG,KAAAA,WACAC,QAAAA,IAAgBH,0BAVxB,MAWQI,SAAAA,GACDC,QAAKC,MAAM,oCAAAC,KArBlBf,QAAA,UAAAgB,SAEAhB,SAAQiB,WAAUD,GAAAA,QAElB,SAAAD,GAEIG,QAAQJ,MAAM,4BAA6BC,GAC3ChB,SAASoB,eADTD,SAAOD,WAAOG,GAAA,eAAA,WACdrB,QAASoB,IAAAA,oDAFblB,qBAqBCA,mBAGDA,IAAAA,aAEA,IAAAF,SAAAsB,OAAA,CAEIC,IAAK,CAAEC,KAAMC,OAAQC,UAAU,EAAMC,OAAO,GAD1CC,eAAe,CAAAJ,KAAIxB,OAASsB,UAAO,EAAAK,OAAA,GACrCJ,WAAK,CAAAC,KAAAC,OAAAC,UAAA,GAAEF,UAAMC,CAARD,KAAAC,OAAAC,UAAA,GAAgBA,OAAQ,CAAEF,KAA1BC,OAAAC,UAAA,GAAgCC,YAAO,CAAAH,KAAAK,KAAAH,UAAA,GADPI,IAAA,CAAAN,KAAAf,OAAAiB,UAAA,GAErCK,gBAAgB,CAAAP,KAAAQ,QAAAN,UAAA,IAAEF,CAAcE,WAAU,UAAMC,YAAO,IAC3BD,OAAU1B,SAAAiC,MAAA,SAAAL,cAA1BM,OAHyBC,QAAAC","file":"Animal.min.js","sourcesContent":["//GROUP 4\r\n// Name:       Samuel Abraham & Sandeep Kumar\r\n// Student id: 100870571      & 100844683\r\n// Web Development -CSS\r\n// Durham college\r\n// 19/04/2024\r\n// LAB4\r\n// INFT2202\r\n// Student Final assignment\r\nconst mongoose = require('mongoose');\r\nrequire('dotenv').config();\r\n\r\n// Improved connection setup with auto-reconnect\r\nmongoose.connection.on('error', err => {\r\n    console.error('MongoDB connection error:', err);\r\n    mongoose.disconnect();\r\n});\r\nmongoose.connection.on('disconnected', () => {\r\n    console.log('MongoDB disconnected; attempting to reconnect...');\r\n    connectWithRetry();\r\n});\r\n\r\nfunction connectWithRetry() {\r\n    mongoose.connect(process.env.MONGO_DB_URL, {\r\n        useNewUrlParser: true,\r\n        useUnifiedTopology: true,\r\n        autoReconnect: true,\r\n        reconnectTries: Number.MAX_VALUE,\r\n        reconnectInterval: 1000\r\n    }).then(() => {\r\n        console.log('MongoDB is connected');\r\n    }).catch(err => {\r\n        console.error('MongoDB initial connection error:', err);\r\n    });\r\n}\r\n\r\n// Invoke initial connection\r\nconnectWithRetry();\r\n\r\n// Define an enhanced schema with indexes for faster query performance\r\nconst AnimalSchema = new mongoose.Schema({\r\n    zoo: { type: String, required: true, index: true },\r\n    scientificName: { type: String, required: true, index: true },\r\n    commonName: { type: String, required: true },\r\n    givenName: { type: String, required: true },\r\n    gender: { type: String, required: true },\r\n    dateOfBirth: { type: Date, required: true },\r\n    age: { type: Number, required: true },\r\n    isTransportable: { type: Boolean, required: true }\r\n}, {\r\n    collection: 'animals',\r\n    timestamps: true // Automatically adds createdAt and updatedAt timestamps\r\n});\r\n\r\n// Create model and export\r\nconst Animal = mongoose.model('Animal', AnimalSchema);\r\nmodule.exports = Animal;\r\n"]}