{"version":3,"sources":["app.js"],"names":["express","require","mongoose","bodyParser","path","passport","dotenv","app","animal","env","MONGODB_URI","useNewUrlParser","useUnifiedTopology","db","connection","on","console","error","bind","json","use","urlencoded","extended","join","__dirname","session","secret","initialize","resave","saveUninitialized","title","get","req","res","next","render","Error","err","status","message","PORT","listen","log","concat"],"mappings":"aAQA,IAAAA,QAAAC,QAAA,WAEMD,WAAUC,QAAQ,eAElBC,SAAWD,QAAQ,YADnBE,OAAUF,QAAGA,UAGbG,KAAOH,QAAQ,QAFfC,QAAWD,QAAQ,mBAInBI,SAAWJ,QAAQ,YAHnBK,OAASL,QAAQ,0BACvBK,OAAMF,SAQN,IAAMG,IAAMP,UALZE,SAAMM,QAASP,QAAQQ,IAAAC,YAAA,CAAAC,iBACvB,EAAAC,oBAAA,IAQA,IAAMC,GAAKX,SAASY,WACpBD,GAAGE,GAAG,QAASC,QAAQC,MAAMC,KAAKF,QAAS,8BAL3CT,IAAMA,IAAGJ,WAATgB,QASAZ,IAAIa,IAAIjB,WAAWkB,WAAW,CAAEC,UAAU,KANyBV,IAAAA,IAAAA,QAAAA,OAAoBR,KAAAmB,KAAAC,UAAA,YAEvFX,IAAGE,IAAGU,QAAST,CAWXU,OAAQ,SARRN,QAAIjB,EACJiB,mBAAeC,KAGnBd,IAAIa,IAAIpB,SAAO2B,cAWfpB,IAAIa,IAAIf,SAASoB,WANbG,IAAAA,IAAM,cAFM,OAGZC,IAAAA,IAAAA,QAAAA,KAAmBN,KAAAC,UAAA,UAIvBjB,IAAIa,IAAIf,IAAAA,SAAAA,EAASsB,GACbP,EAAIf,OAAAA,QAAA,CAARyB,MAEA,WAKAvB,IAAIwB,IAAI,SAAAC,EAAKC,EAAAC,GACTD,IAAIE,EAAO,IAAXC,MAAoB,aAAEN,EAAAA,OAAO,IAA7BI,EAAAG,KAKJ9B,IAAIa,IAAI,SAAAiB,EAAAL,EAACA,EAAKC,GACVA,EAAMI,OAAMA,EAAID,QAAM,KACtBC,EAAIC,OAAS,QAAb,CACKD,QAALA,EAAAE,QAHJtB,MAAA,gBAAAe,EAAAzB,IAAAwB,IAAA,OAAAM,EAAA,OAUQpB,IAAAA,KAAOe,QAAQD,IAAIS,MAAZ,IAFSjC,IAApBkC,OAAAD,KAAA,WAAA,OAAAxB,QAAA0B,IAAA,0BAAAC,OAAAH","file":"app.min.js","sourcesContent":["//GROUP 4\r\n// Name:       Samuel Abraham & Sandeep Kumar\r\n// Student id: 100870571      & 100844683\r\n// Web Development -CSS\r\n// Durham college\r\n// 19/04/2024\r\n// LAB4\r\n// INFT2202\r\n// Student Final assignment\r\n\r\nconst express = require('express');\r\nconst bodyParser = require('body-parser');\r\nconst mongoose = require('mongoose');\r\nconst dotenv = require('dotenv');\r\nconst path = require('path');\r\nconst session = require('express-session');\r\nconst passport = require('passport');\r\nconst animal = require('./routes/animal.router');\r\n// Load environment variables from .env file\r\ndotenv.config();\r\n\r\n// Create Express application\r\nconst app = express();\r\n\r\n// MongoDB connection\r\nmongoose.connect(process.env.MONGODB_URI, { useNewUrlParser: true, useUnifiedTopology: true });\r\nconst db = mongoose.connection;\r\ndb.on('error', console.error.bind(console, 'MongoDB connection error:'));\r\n\r\n// Use bodyParser middleware to parse JSON and url-encoded requests\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\n\r\n// Static folder\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\n// Session configuration\r\napp.use(session({\r\n    secret: 'secret',\r\n    resave: false,\r\n    saveUninitialized: true\r\n}));\r\n\r\n// Passport initialization\r\napp.use(passport.initialize());\r\napp.use(passport.session());\r\n\r\n// Set view engine\r\napp.set('view engine', 'pug');\r\napp.set('views', path.join(__dirname, 'views'));\r\n\r\n// Define routes\r\napp.get('/', (req, res) => {\r\n    res.render('index', { title: 'Home' });\r\n});\r\n\r\n\r\n// Error handling\r\napp.use((req, res, next) => {\r\n    const err = new Error('Not Found');\r\n    err.status = 404;\r\n    next(err);\r\n});\r\n\r\napp.use((err, req, res, next) => {\r\n    res.status(err.status || 500);\r\n    res.render('error', {\r\n        message: err.message,\r\n        error: req.app.get('env') === 'development' ? err : {}\r\n    });\r\n});\r\n\r\n// Set the port and start the server\r\nconst PORT = process.env.PORT || 3000;\r\napp.listen(PORT, () => console.log(`Server started on port ${PORT}`));\r\n\r\n"]}