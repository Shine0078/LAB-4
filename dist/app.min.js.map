{"version":3,"sources":["app.js"],"names":["bodyParser","require","mongoose","dotenv","session","animal","config","app","express","connect","process","env","MONGODB_URI","useNewUrlParser","useUnifiedTopology","connection","error","bind","console","db","on","pug","json","use","urlencoded","extended","path","join","__dirname","secret","set","title","req","res","render","err","status","next","Error","message","get","PORT","listen","log","concat"],"mappings":"aAcA,IAAMA,QAAUC,QAAU,WAApBD,WAAaC,QAAQ,eACrBC,SAAWD,QAAQ,YACnBE,OAASF,QAAQ,UAAjBE,KAASF,QAAQ,QAEjBG,QAAUH,QAAQ,mBAElBI,OAASJ,QAAQ,0BAIvBE,OAAOG,SAGP,IAAMC,IAAMC,UAGZN,SAASO,QAAQC,QAAQC,IAAIC,YAAa,CAAAC,iBAAA,EAAAC,oBAAA,IAAED,IAAAA,GAAAA,SAAiBE,WAAMD,GAAAA,GAAAA,QAAAA,QAAoBE,MAAAC,KAAAC,QAAA,8BAEvFC,IAAGC,IAAGC,IAAAC,QAINf,IAAIgB,IAAIf,QAAQgB,WAAW,CAAEC,UAAU,KAAVA,IAAAA,IAAAA,QAAU,OAAAC,KAAAC,KAAAC,UAAA,YAGvCrB,IAAIgB,IAAIf,QAAO,CAIXqB,OAAQ,SADRN,QAAInB,EACJyB,mBADY,KAUhBtB,IAAIuB,IAAI,cAAcH,OAAtBpB,IAAIuB,IAAI,QAASJ,KAAKC,KAAKC,UAAW,UAIZG,IAAAA,IAAAA,IAAO,SAAAC,EAAAC,GAA7BA,EAAAC,OAAA,QAAA,CAAAH,MAAA,WAOAI,IAAAA,IAAIC,SAAAA,EAAJH,EAAAI,GACAA,IAAIF,EAAJ,IAAAG,MAAA,aAHJH,EAAAC,OAAA,IAMIb,EAAIY,KAGAI,IAAAA,IAAAA,SAAAA,EAASJ,EAAII,EADGF,GAEhBrB,EAAAA,OAAWT,EAAIiC,QAAR,KAFXP,EAAAC,OAAA,QAAA,CAMJK,QAAAJ,EAAAI,QAJQvB,MAA8B,gBAAvBgB,EAAIzB,IAAIiC,IAAI,OAA2BL,EAAM,OAK5D,IAAMM,KAAO/B,QAAQC,IAAI8B,MAAQ,IACjClC,IAAImC,OAAOD,KAAM,WAAA,OAAMvB,QAAQyB,IAAR,0BAAAC,OAAsCH","file":"app.min.js","sourcesContent":["//GROUP 4\r\n// Name:       Samuel Abraham & Sandeep Kumar\r\n// Student id: 100870571      & 100844683\r\n// Web Development -CSS\r\n// Durham college\r\n// 19/04/2024\r\n// LAB4\r\n// INFT2202\r\n// Student Final assignment\r\n\r\n\r\n\r\n\r\nconst express = require('express');\r\nconst bodyParser = require('body-parser');\r\nconst mongoose = require('mongoose');\r\nconst dotenv = require('dotenv');\r\nconst path = require('path');\r\nconst session = require('express-session');\r\n\r\nconst animal = require('./routes/animal.router');\r\n\r\n\r\n// Load environment variables from .env file\r\ndotenv.config();\r\n\r\n// Create Express application\r\nconst app = express();\r\n\r\n// MongoDB connection\r\nmongoose.connect(process.env.MONGODB_URI, { useNewUrlParser: true, useUnifiedTopology: true });\r\nconst db = mongoose.connection;\r\ndb.on('error', console.error.bind(console, 'MongoDB connection error:'));\r\n\r\n// Use bodyParser middleware to parse JSON and url-encoded requests\r\napp.use(pug.json());\r\napp.use(express.urlencoded({ extended: true }));\r\n\r\n// Static folder\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\n// Session configuration\r\napp.use(session({\r\n    secret: 'secret',\r\n    resave: false,\r\n    saveUninitialized: true\r\n}));\r\n\r\n\r\n\r\n// Set view engine\r\napp.set('view engine', 'pug');\r\napp.set('views', path.join(__dirname, 'views'));\r\n\r\n// Define routes\r\napp.get('/', (req, res) => {\r\n    res.render('index', { title: 'Home' });\r\n});\r\n\r\n\r\n// Error handling\r\napp.use((req, res, next) => {\r\n    const err = new Error('Not Found');\r\n    err.status = 404;\r\n    next(err);\r\n});\r\n\r\napp.use((err, req, res, next) => {\r\n    res.status(err.status || 500);\r\n    res.render('error', {\r\n        message: err.message,\r\n        error: req.app.get('env') === 'development' ? err : {}\r\n    });\r\n});\r\n\r\n// Set the port and start the server\r\nconst PORT = process.env.PORT || 3000;\r\napp.listen(PORT, () => console.log(`Server started on port ${PORT}`));\r\n\r\n"]}