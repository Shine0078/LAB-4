"use strict";function ownKeys(n,e){var r=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);e&&(t=t.filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})),r.push.apply(r,t)}return r}function _objectSpread(n){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(r,!0).forEach(function(e){_defineProperty(n,e,r[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(r)):ownKeys(r).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(r,e))})}return n}function _defineProperty(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}var Animal=require("../models/Animal");function getAllAnimals(e,n){var r;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Animal.find());case 3:r=e.sent,n.render("animals/all",{pageTitle:"List of All Animals",animals:r}),e.next=11;break;case 7:e.prev=7,e.t0=e.catch(0),console.error("Failed to retrieve animals:",e.t0),n.status(500).send("Failed to load animal data");case 11:case"end":return e.stop()}},null,null,[[0,7]])}function showEntryForm(e,n){n.render("animals/entry",{pageTitle:"Enter New Animal"})}function addNewAnimal(n,r){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=new Animal(_objectSpread({},n.body,{isTransportable:"Yes"===n.body.isTransportable})),e.next=4,regeneratorRuntime.awrap(t.save());case 4:r.redirect("/animals"),e.next=11;break;case 7:e.prev=7,e.t0=e.catch(0),console.error("Failed to save new animal:",e.t0),r.status(500).send("Failed to add new animal");case 11:case"end":return e.stop()}},null,null,[[0,7]])}function editAnimalForm(n,r){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Animal.findById(n.params.id));case 3:if(t=e.sent){e.next=6;break}return e.abrupt("return",r.status(404).send("Animal not found"));case 6:r.render("animals/edit",{pageTitle:"Edit Animal Details",animal:t}),e.next=13;break;case 9:e.prev=9,e.t0=e.catch(0),console.error("Failed to find animal:",e.t0),r.status(500).send("Failed to retrieve animal details");case 13:case"end":return e.stop()}},null,null,[[0,9]])}function updateAnimalDetails(n,r){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=_objectSpread({},n.body,{isTransportable:"Yes"===n.body.isTransportable}),e.next=4,regeneratorRuntime.awrap(Animal.findByIdAndUpdate(n.params.id,t,{new:!0}));case 4:if(e.sent){e.next=7;break}return e.abrupt("return",r.status(404).send("Animal not found"));case 7:r.redirect("/animals"),e.next=14;break;case 10:e.prev=10,e.t0=e.catch(0),console.error("Failed to update animal:",e.t0),r.status(500).send("Failed to update animal");case 14:case"end":return e.stop()}},null,null,[[0,10]])}function deleteAnimal(n,r){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(Animal.findByIdAndDelete(n.params.id));case 3:r.redirect("/animals"),e.next=10;break;case 6:e.prev=6,e.t0=e.catch(0),console.error("Failed to delete animal:",e.t0),r.status(500).send("Failed to delete animal");case 10:case"end":return e.stop()}},null,null,[[0,6]])}module.exports={getAllAnimals:getAllAnimals,showEntryForm:showEntryForm,addNewAnimal:addNewAnimal,editAnimalForm:editAnimalForm,updateAnimalDetails:updateAnimalDetails,deleteAnimal:deleteAnimal};
//# sourceMappingURL=animal.controller.min.js.map
