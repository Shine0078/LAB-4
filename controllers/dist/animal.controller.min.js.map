{"version":3,"sources":["animal.controller.js"],"names":["Animal","require","getAllAnimals","req","res","animals","regeneratorRuntime","async","_context","prev","next","awrap","find","sent","render","pageTitle","t0","console","status","send","stop","showEntryForm","addNewAnimal","newAnimal","_context2","_objectSpread","body","isTransportable","save","redirect","editAnimalForm","animal","_context3","findById","params","id","abrupt","error","updateAnimalDetails","updatedData","_context4","findByIdAndUpdate","new","deleteAnimal","_context5","findByIdAndDelete","module","exports"],"mappings":"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","file":"animal.controller.min.js","sourcesContent":["\r\n//GROUP 4\r\n// Name:       Samuel Abraham & Sandeep Kumar\r\n// Student id: 100870571      & 100844683\r\n// Web Development -CSS\r\n// Durham college\r\n// 19/04/2024\r\n// LAB4\r\n// INFT2202\r\n// Student Final assignment\r\nconst Animal = require('../models/Animal');\r\n\r\n/**\r\n * Get a list of all animals and render them on the all-animals page.\r\n */\r\nasync function getAllAnimals(req, res) {\r\n    try {\r\n        const animals = await Animal.find();\r\n        res.render('animals/all', {\r\n            pageTitle: 'List of All Animals',\r\n            animals: animals\r\n        });\r\n    } catch (error) {\r\n        console.error('Failed to retrieve animals:', error);\r\n        res.status(500).send('Failed to load animal data');\r\n    }\r\n}\r\n\r\n/**\r\n * Render the form for entering a new animal.\r\n */\r\nfunction showEntryForm(req, res) {\r\n    res.render('animals/entry', {\r\n        pageTitle: 'Enter New Animal'\r\n    });\r\n}\r\n\r\n/**\r\n * Add a new animal to the database from the form submission.\r\n */\r\nasync function addNewAnimal(req, res) {\r\n    try {\r\n        const newAnimal = new Animal({ ...req.body, isTransportable: req.body.isTransportable === 'Yes' });\r\n        await newAnimal.save();\r\n        res.redirect('/animals');\r\n    } catch (error) {\r\n        console.error('Failed to save new animal:', error);\r\n        res.status(500).send('Failed to add new animal');\r\n    }\r\n}\r\n\r\n/**\r\n * Show details of an animal for editing.\r\n */\r\nasync function editAnimalForm(req, res) {\r\n    try {\r\n        const animal = await Animal.findById(req.params.id);\r\n        if (!animal) {\r\n            return res.status(404).send('Animal not found');\r\n        }\r\n        res.render('animals/edit', {\r\n            pageTitle: 'Edit Animal Details',\r\n            animal: animal\r\n        });\r\n    } catch (error) {\r\n        console.error('Failed to find animal:', error);\r\n        res.status(500).send('Failed to retrieve animal details');\r\n    }\r\n}\r\n\r\n/**\r\n * Update an animal's details in the database.\r\n */\r\nasync function updateAnimalDetails(req, res) {\r\n    try {\r\n        const updatedData = { ...req.body, isTransportable: req.body.isTransportable === 'Yes' };\r\n        const updatedAnimal = await Animal.findByIdAndUpdate(req.params.id, updatedData, { new: true });\r\n        if (!updatedAnimal) {\r\n            return res.status(404).send('Animal not found');\r\n        }\r\n        res.redirect('/animals');\r\n    } catch (error) {\r\n        console.error('Failed to update animal:', error);\r\n        res.status(500).send('Failed to update animal');\r\n    }\r\n}\r\n\r\n/**\r\n * Delete an animal from the database.\r\n */\r\nasync function deleteAnimal(req, res) {\r\n    try {\r\n        await Animal.findByIdAndDelete(req.params.id);\r\n        res.redirect('/animals');\r\n    } catch (error) {\r\n        console.error('Failed to delete animal:', error);\r\n        res.status(500).send('Failed to delete animal');\r\n    }\r\n}\r\n\r\n// Exporting the controller functions\r\nmodule.exports = {\r\n    getAllAnimals,\r\n    showEntryForm,\r\n    addNewAnimal,\r\n    editAnimalForm,\r\n    updateAnimalDetails,\r\n    deleteAnimal\r\n};\r\n"]}