{"version":3,"sources":["animal.controller.js"],"names":["Animal","require","viewAnimals","req","res","animals","regeneratorRuntime","async","_context","prev","next","awrap","find","sent","render","pageTitle","t0","console","error","send","stop","showEntryForm","addNewAnimal","newAnimal","_context2","_objectSpread","body","isTransportable","save","redirect","status","editAnimalForm","animal","_context3","findById","params","id","abrupt","updateAnimalDetails","updatedData","_context4","findByIdAndUpdate","new","processAnimalDeletion","_context5","module","exports"],"mappings":"wuBACA,IAAAA,OAAAC,QAAA,oBAKA,SAAAC,YAAAC,EAAAC,GAAA,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MAEAX,OAAAY,QAFA,KAAA,EAEAP,EAFAG,EAAAK,KAGMb,EAAMc,OAAGb,sBAAf,CAEAc,UAAA,sBAQYV,QAASA,IAbrBG,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,MAAA,GAgBQS,QAAQC,MAAM,8BAAdV,EAAAQ,IARRZ,EAAeF,OAAAA,KAAfiB,KAAA,8BARA,KAAA,GAAA,IAAA,MAAA,OAAAX,EAAAY,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,KAQA,SAAAC,cAAAlB,EAAAC,GAAAA,EAAAU,OAAA,qBAAA,CAkBQC,UAAW,qBAlBnB,SAAAO,aAAAnB,EAAAC,GAAA,IAAAmB,EAAA,OAAAjB,mBAAAC,MAAA,SAAAiB,GAAA,OAAA,OAAAA,EAAAf,KAAAe,EAAAd,MAAA,KAAA,EAAA,OAAAc,EAAAf,KAAA,EA2Bcc,EAAY,IAAIvB,OAAJyB,cAAA,GAAgBtB,EAAIuB,KAApB,CAA0BC,gBAA8C,QAA7BxB,EAAIuB,KAAKC,mBA3B9EH,EAAAd,KAAA,EAAAJ,mBAAAK,MAAAY,EAAAK,QAAA,KAAA,EAAAxB,EAAAyB,SAAA,sBAAAL,EAAAd,KAAA,GAAA,MAAA,KAAA,EAAAc,EAAAf,KAAA,EAAAe,EAAAR,GAAAQ,EAAA,MAAA,GAQQP,QAAAA,MAAQC,6BAARD,EAAAA,IACAb,EAAAA,OAAI0B,KAAJX,KAAgBA,4BATxB,KAAA,GAAA,IAAA,MAAA,OAAAK,EAAAJ,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,KAAA,SAAAW,eAAA5B,EAAAC,GAAA,IAAA4B,EAAA,OAAA1B,mBAAAC,MAAA,SAAA0B,GAAA,OAAA,OAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,KAAA,EAAA,OAAAuB,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAAAJ,mBAAAK,MAaAX,OAAAkC,SAAA/B,EAAAgC,OAAAC,KAbA,KAAA,EAAA,GAaAJ,EAbAC,EAAApB,KAAA,CAAAoB,EAAAvB,KAAA,EAAA,MAAA,OAAAuB,EAAAI,OAAA,SA2CmBjC,EAAI0B,OAAO,KAAKX,KAAK,qBA3CxC,KAAA,EA6CQf,EAAIU,OAAO,uBAAwB,CA7BlCO,UAAclB,sBACnB6B,OAAWA,IAjBfC,EAAAvB,KAAA,GAAA,MAAA,KAAA,EAAAuB,EAAAxB,KAAA,EAAAwB,EAAAjB,GAAAiB,EAAA,MAAA,GAoBChB,QAAAC,MAAA,yBAAAe,EAAAjB,IAEDZ,EAAA0B,OAAA,KAAAX,KAAA,qCAtBA,KAAA,GAAA,IAAA,MAAA,OAAAc,EAAAb,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,KAyBA,SAAAkB,oBAAAnC,EAAAC,GAAA,IAAAmC,EAAA,OAAAjC,mBAAAC,MAAA,SAAAiC,GAAA,OAAA,OAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,KAAA,EAAA,OAAA8B,EAAA/B,KAAA,EAAA8B,EAAAd,cAAA,GAAAtB,EAAAuB,KAAA,CAAAC,gBAAA,QAAAxB,EAAAuB,KAAAC,kBAAAa,EAAA9B,KAAA,EAAAJ,mBAAAK,MAAAX,OAAAyC,kBAAAtC,EAAAgC,OAAAC,GAAAG,EAAA,CAAAG,KAAA,KAAA,KAAA,EAAA,GAAAF,EAAA3B,KAAA,CAAA2B,EAAA9B,KAAA,EAAA,MAAA,OAAA8B,EAAAH,OAAA,SAAAjC,EAE0B0B,OAAI9B,KAAJmB,KAAA,qBAF1B,KAAA,EAE0Bf,EAAAyB,SAF1B,+BAAAW,EAAA9B,KAAA,GAAA,MAAA,KAAA,GAAA8B,EAAA/B,KAAA,GAAA+B,EAAAxB,GAAAwB,EAAA,MAAA,GAAAvB,QAAAC,MAAA,2BAAAsB,EAAAxB,IA2CQZ,EAAI0B,OAAO,KAAKX,KAAK,2BA3C7B,KAAA,GAAA,IAAA,MAAA,OAAAqB,EAAApB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAAA,SAAAuB,sBAAAxC,EAAAC,GAAA,OAAAE,mBAAAC,MAAA,SAAAqC,GAAA,OAAA,OAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,KAAA,EAAA,OAAAkC,EAAAnC,KAAA,EAAAmC,EAAAlC,KAAA,EAAAJ,mBAAAK,MAMQM,OAAQC,kBAAMf,EAAAgC,OAAAC,KANtB,KAAA,EAOQhC,EAAAA,SAAW,yBAPnBwC,EAAAlC,KAAA,GAAA,MAAA,KAAA,EAAAkC,EAAAnC,KAAA,EAAAmC,EAAA5B,GAAA4B,EAAA,MAAA,GAAA3B,QAAAC,MAAA,2BAAA0B,EAAA5B,IAAAZ,EAAA0B,OAAA,KAAAX,KAAA,2BAAA,KAAA,GAAA,IAAA,MAAA,OAAAyB,EAAAxB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,KAAAyB,OAAAC,QAAA,CAWA5C,YAAAA,YAoDImB,cAAAA,cACAC,aAAAA,aACAS,eAAAA,eACAO,oBAAAA,oBApDJK,sBAAAA","file":"animal.controller.min.js","sourcesContent":["//GROUP 4\r\n// Name:       Samuel Abraham & Sandeep Kumar\r\n// Student id: 100870571      & 100844683\r\n// Web Development -CSS\r\n// Durham college\r\n// 19/04/2024\r\n// LAB4\r\n// INFT2202\r\n// Student Final assignment\r\nconst Animal = require('../models/Animal');\r\n\r\n/**\r\n * Get a list of all animals and render them on the all-animals page.\r\n */\r\nasync function viewAnimals(req, res) {\r\n    try {\r\n        const animals = await Animal.find();\r\n        res.render('animals/all-animals', {\r\n            pageTitle: 'List of All Animals',\r\n            animals: animals\r\n        });\r\n    } catch (error) {\r\n        console.error('Failed to retrieve animals:', error);\r\n        res.status(500).send('Failed to load animal data');\r\n    }\r\n}\r\n\r\n/**\r\n * Render the form for entering a new animal.\r\n */\r\nfunction showEntryForm(req, res) {\r\n    res.render('animals/entry-form', {\r\n        pageTitle: 'Enter New Animal'\r\n    });\r\n}\r\n\r\n/**\r\n * Add a new animal to the database from the form submission.\r\n */\r\nasync function addNewAnimal(req, res) {\r\n    try {\r\n        const newAnimal = new Animal({ ...req.body, isTransportable: req.body.isTransportable === 'Yes' });\r\n        await newAnimal.save();\r\n        res.redirect('animals/entry-form');\r\n    } catch (error) {\r\n        console.error('Failed to save new animal:', error);\r\n        res.status(500).send('Failed to add new animal');\r\n    }\r\n}\r\n\r\n/**\r\n * Show details of an animal for editing.\r\n */\r\nasync function editAnimalForm(req, res) {\r\n    try {\r\n        const animal = await Animal.findById(req.params.id);\r\n        if (!animal) {\r\n            return res.status(404).send('Animal not found');\r\n        }\r\n        res.render('animals/eedit-animal', {\r\n            pageTitle: 'Edit Animal Details',\r\n            animal: animal\r\n        });\r\n    } catch (error) {\r\n        console.error('Failed to find animal:', error);\r\n        res.status(500).send('Failed to retrieve animal details');\r\n    }\r\n}\r\n\r\n/**\r\n * Update an animal's details in the database.\r\n */\r\nasync function  updateAnimalDetails(req, res) {\r\n    try {\r\n        const updatedData = { ...req.body, isTransportable: req.body.isTransportable === 'Yes' };\r\n        const updatedAnimal = await Animal.findByIdAndUpdate(req.params.id, updatedData, { new: true });\r\n        if (!updatedAnimal) {\r\n            return res.status(404).send('Animal not found');\r\n        }\r\n        res.redirect('animals/edit-animal-details');\r\n    } catch (error) {\r\n        console.error('Failed to update animal:', error);\r\n        res.status(500).send('Failed to update animal');\r\n    }\r\n}\r\n\r\n/**\r\n * Delete an animal from the database.\r\n */\r\nasync function processAnimalDeletion(req, res) {\r\n    try {\r\n        await Animal.findByIdAndDelete(req.params.id);\r\n        res.redirect('animals/delete-animal');\r\n    } catch (error) {\r\n        console.error('Failed to delete animal:', error);\r\n        res.status(500).send('Failed to delete animal');\r\n    }\r\n}\r\n\r\n// Exporting the controller functions\r\nmodule.exports = {\r\n    viewAnimals,\r\n    showEntryForm,\r\n    addNewAnimal,\r\n    editAnimalForm,\r\n    updateAnimalDetails,\r\n    processAnimalDeletion\r\n};\r\n"]}