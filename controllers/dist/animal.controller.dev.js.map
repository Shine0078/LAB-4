{"version":3,"sources":["animal.controller.js"],"names":["Animal","require","viewAnimals","req","res","find","animals","render","pageTitle","console","error","status","send","showEntryForm","addNewAnimal","newAnimal","body","isTransportable","save","redirect","editAnimalForm","findById","params","id","animal","updateAnimalDetails","updatedData","findByIdAndUpdate","updatedAnimal","processAnimalDeletion","findByIdAndDelete","module","exports"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAAtB;AAEA;;;;;AAGA,SAAeC,WAAf,CAA2BC,GAA3B,EAAgCC,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAE8BJ,MAAM,CAACK,IAAP,EAF9B;;AAAA;AAEcC,UAAAA,OAFd;AAGQF,UAAAA,GAAG,CAACG,MAAJ,CAAW,qBAAX,EAAkC;AAC9BC,YAAAA,SAAS,EAAE,qBADmB;AAE9BF,YAAAA,OAAO,EAAEA;AAFqB,WAAlC;AAHR;AAAA;;AAAA;AAAA;AAAA;AAQQG,UAAAA,OAAO,CAACC,KAAR,CAAc,6BAAd;AACAN,UAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,4BAArB;;AATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;;;;;AAGA,SAASC,aAAT,CAAuBV,GAAvB,EAA4BC,GAA5B,EAAiC;AAC7BA,EAAAA,GAAG,CAACG,MAAJ,CAAW,oBAAX,EAAiC;AAC7BC,IAAAA,SAAS,EAAE;AADkB,GAAjC;AAGH;AAED;;;;;AAGA,SAAeM,YAAf,CAA4BX,GAA5B,EAAiCC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEcW,UAAAA,SAFd,GAE0B,IAAIf,MAAJ,mBAAgBG,GAAG,CAACa,IAApB;AAA0BC,YAAAA,eAAe,EAAEd,GAAG,CAACa,IAAJ,CAASC,eAAT,KAA6B;AAAxE,aAF1B;AAAA;AAAA,0CAGcF,SAAS,CAACG,IAAV,EAHd;;AAAA;AAIQd,UAAAA,GAAG,CAACe,QAAJ,CAAa,oBAAb;AAJR;AAAA;;AAAA;AAAA;AAAA;AAMQV,UAAAA,OAAO,CAACC,KAAR,CAAc,4BAAd;AACAN,UAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,0BAArB;;AAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;;AAGA,SAAeQ,cAAf,CAA8BjB,GAA9B,EAAmCC,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAE6BJ,MAAM,CAACqB,QAAP,CAAgBlB,GAAG,CAACmB,MAAJ,CAAWC,EAA3B,CAF7B;;AAAA;AAEcC,UAAAA,MAFd;;AAAA,cAGaA,MAHb;AAAA;AAAA;AAAA;;AAAA,4CAImBpB,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kBAArB,CAJnB;;AAAA;AAMQR,UAAAA,GAAG,CAACG,MAAJ,CAAW,sBAAX,EAAmC;AAC/BC,YAAAA,SAAS,EAAE,qBADoB;AAE/BgB,YAAAA,MAAM,EAAEA;AAFuB,WAAnC;AANR;AAAA;;AAAA;AAAA;AAAA;AAWQf,UAAAA,OAAO,CAACC,KAAR,CAAc,wBAAd;AACAN,UAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,mCAArB;;AAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;;;;;AAGA,SAAgBa,mBAAhB,CAAoCtB,GAApC,EAAyCC,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEcsB,UAAAA,WAFd,qBAEiCvB,GAAG,CAACa,IAFrC;AAE2CC,YAAAA,eAAe,EAAEd,GAAG,CAACa,IAAJ,CAASC,eAAT,KAA6B;AAFzF;AAAA;AAAA,0CAGoCjB,MAAM,CAAC2B,iBAAP,CAAyBxB,GAAG,CAACmB,MAAJ,CAAWC,EAApC,EAAwCG,WAAxC,EAAqD;AAAE,mBAAK;AAAP,WAArD,CAHpC;;AAAA;AAGcE,UAAAA,aAHd;;AAAA,cAIaA,aAJb;AAAA;AAAA;AAAA;;AAAA,4CAKmBxB,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kBAArB,CALnB;;AAAA;AAOQR,UAAAA,GAAG,CAACe,QAAJ,CAAa,6BAAb;AAPR;AAAA;;AAAA;AAAA;AAAA;AASQV,UAAAA,OAAO,CAACC,KAAR,CAAc,0BAAd;AACAN,UAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,yBAArB;;AAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;;;;;AAGA,SAAeiB,qBAAf,CAAqC1B,GAArC,EAA0CC,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEcJ,MAAM,CAAC8B,iBAAP,CAAyB3B,GAAG,CAACmB,MAAJ,CAAWC,EAApC,CAFd;;AAAA;AAGQnB,UAAAA,GAAG,CAACe,QAAJ,CAAa,uBAAb;AAHR;AAAA;;AAAA;AAAA;AAAA;AAKQV,UAAAA,OAAO,CAACC,KAAR,CAAc,0BAAd;AACAN,UAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,yBAArB;;AANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAUA;;;AACAmB,MAAM,CAACC,OAAP,GAAiB;AACb9B,EAAAA,WAAW,EAAXA,WADa;AAEbW,EAAAA,aAAa,EAAbA,aAFa;AAGbC,EAAAA,YAAY,EAAZA,YAHa;AAIbM,EAAAA,cAAc,EAAdA,cAJa;AAKbK,EAAAA,mBAAmB,EAAnBA,mBALa;AAMbI,EAAAA,qBAAqB,EAArBA;AANa,CAAjB","sourcesContent":["//GROUP 4\r\n// Name:       Samuel Abraham & Sandeep Kumar\r\n// Student id: 100870571      & 100844683\r\n// Web Development -CSS\r\n// Durham college\r\n// 19/04/2024\r\n// LAB4\r\n// INFT2202\r\n// Student Final assignment\r\nconst Animal = require('../models/Animal');\r\n\r\n/**\r\n * Get a list of all animals and render them on the all-animals page.\r\n */\r\nasync function viewAnimals(req, res) {\r\n    try {\r\n        const animals = await Animal.find();\r\n        res.render('animals/all-animals', {\r\n            pageTitle: 'List of All Animals',\r\n            animals: animals\r\n        });\r\n    } catch (error) {\r\n        console.error('Failed to retrieve animals:', error);\r\n        res.status(500).send('Failed to load animal data');\r\n    }\r\n}\r\n\r\n/**\r\n * Render the form for entering a new animal.\r\n */\r\nfunction showEntryForm(req, res) {\r\n    res.render('animals/entry-form', {\r\n        pageTitle: 'Enter New Animal'\r\n    });\r\n}\r\n\r\n/**\r\n * Add a new animal to the database from the form submission.\r\n */\r\nasync function addNewAnimal(req, res) {\r\n    try {\r\n        const newAnimal = new Animal({ ...req.body, isTransportable: req.body.isTransportable === 'Yes' });\r\n        await newAnimal.save();\r\n        res.redirect('animals/entry-form');\r\n    } catch (error) {\r\n        console.error('Failed to save new animal:', error);\r\n        res.status(500).send('Failed to add new animal');\r\n    }\r\n}\r\n\r\n/**\r\n * Show details of an animal for editing.\r\n */\r\nasync function editAnimalForm(req, res) {\r\n    try {\r\n        const animal = await Animal.findById(req.params.id);\r\n        if (!animal) {\r\n            return res.status(404).send('Animal not found');\r\n        }\r\n        res.render('animals/eedit-animal', {\r\n            pageTitle: 'Edit Animal Details',\r\n            animal: animal\r\n        });\r\n    } catch (error) {\r\n        console.error('Failed to find animal:', error);\r\n        res.status(500).send('Failed to retrieve animal details');\r\n    }\r\n}\r\n\r\n/**\r\n * Update an animal's details in the database.\r\n */\r\nasync function  updateAnimalDetails(req, res) {\r\n    try {\r\n        const updatedData = { ...req.body, isTransportable: req.body.isTransportable === 'Yes' };\r\n        const updatedAnimal = await Animal.findByIdAndUpdate(req.params.id, updatedData, { new: true });\r\n        if (!updatedAnimal) {\r\n            return res.status(404).send('Animal not found');\r\n        }\r\n        res.redirect('animals/edit-animal-details');\r\n    } catch (error) {\r\n        console.error('Failed to update animal:', error);\r\n        res.status(500).send('Failed to update animal');\r\n    }\r\n}\r\n\r\n/**\r\n * Delete an animal from the database.\r\n */\r\nasync function processAnimalDeletion(req, res) {\r\n    try {\r\n        await Animal.findByIdAndDelete(req.params.id);\r\n        res.redirect('animals/delete-animal');\r\n    } catch (error) {\r\n        console.error('Failed to delete animal:', error);\r\n        res.status(500).send('Failed to delete animal');\r\n    }\r\n}\r\n\r\n// Exporting the controller functions\r\nmodule.exports = {\r\n    viewAnimals,\r\n    showEntryForm,\r\n    addNewAnimal,\r\n    editAnimalForm,\r\n    updateAnimalDetails,\r\n    processAnimalDeletion\r\n};\r\n"],"file":"animal.controller.dev.js"}